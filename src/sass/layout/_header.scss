// -----------------------------------------------------------------------------
// Header
// -----------------------------------------------------------------------------

.header {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 10;
  min-width: 320px;
  height: map-get($header-height, 'std');

  @include breakpoint('medium') {
    height: map-get($header-height, 'medium');
  }

  @include breakpoint('large') {
    height: map-get($header-height, 'large');
  }

  &::before {
    content: "";
    position: absolute;
    top: - 20px;
    left: 0;
    right: 0;
    z-index: -1;
    height: 100px;
    background: linear-gradient(to bottom, rgba(#060506, 0.5) 0%, rgba(#060506, 0) 100%);

    @include breakpoint('medium') {
      top: 0;
      height: 120px;
    }

    @include breakpoint('large') {
      height: 180px;
    }
  }

  .container {
    @extend %clearfix;
    @extend %container;
    position: relative;
    z-index: 1;
    max-width: map-get($site-range, 'max') + px;
    padding: $block-padder 0 $block-padder $block-padder;

    @include breakpoint('large') {
      padding: $block-padder-larger;
    }
  }

  .site-logo,
  .site-main-menu,
  .button {
    float: left;
  }

  .site-logo {
    margin-right: $block-margin-after / 2;

    @include breakpoint('medium') {
      margin-right: $block-margin-after;
    }
  }

  .button {
    @extend %button--border--reversed;
    display: none;
    float: right;
    margin-left: $block-margin-before;
    margin-right: $block-margin-after;

    @include breakpoint('large') {
      display: block;
      margin-top: 4px;
      margin-right: 0;
    }
  }

  &.reversed {
    background: get-color('block', 'base');
    box-shadow: 0 0 15px 0 rgba(get-color('block', 'base-reversed'), 0.15);

    &::before {
      display: none;
    }

    .button {
      @extend %button--border--primary;
      display: block;
    }

    .site-main-menu {
      display: none;

      @include breakpoint('medium') {
        display: block;
      }

      a {
        color: get-color('text', 'base');

        &.current {
          color: get-color('text', 'base-lighter');
        }
      }
    }
  }
}
